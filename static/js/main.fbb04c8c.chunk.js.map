{"version":3,"sources":["component/helper.js","component/Style/EnhancedTable_Style.js","component/EnhancedTable.js","component/Style/SimpleTabs_Style.js","component/SimpleTabs.js","component/Style/InputSuggest_Style.js","component/InputSuggest.js","component/Style/InputBar_Style.js","component/InputBar.js","component/TaskMain.js","index.js"],"names":["createData","name","priority","status","type","date","statusList","Open","InProgress","Done","getToday","Today","Date","dateString","getFullYear","getMonth","slice","getDate","console","log","useStyles","makeStyles","theme","root","width","paper","marginBottom","spacing","table","minWidth","visuallyHidden","border","clip","height","margin","overflow","padding","position","top","useToolbarStyles","paddingLeft","paddingRight","highlight","palette","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","descendingComparator","a","b","orderBy","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","classes","onSelectAllClick","order","numSelected","rowCount","onRequestSort","react_default","createElement","TableHead","TableRow","TableCell","Checkbox","indeterminate","checked","onChange","inputProps","aria-label","map","headCell","key","align","sortDirection","TableSortLabel","active","direction","onClick","property","event","className","EnhancedTableToolbar","Toolbar","clsx","[object Object]","Typography","variant","component","Tooltip","IconButton","newSelected","selectedItem","data","forEach","item","found","findIndex","element","splice","removed","Object","toConsumableArray","changefunc","handleDeleteClick","Delete_default","FilterList_default","EnhancedTable","_React$useState","React","useState","_React$useState2","slicedToArray","setOrder","_React$useState3","_React$useState4","setOrderBy","_React$useState5","_React$useState6","selected","setSelected","_React$useState7","_React$useState8","page","setPage","_React$useState9","_React$useState10","dense","setDense","_React$useState11","_React$useState12","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","Paper","EnhancedTable_EnhancedTableToolbar","TableContainer","Table","aria-labelledby","size","target","newSelecteds","n","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","row","isItemSelected","indexOf","labelId","concat","hover","role","aria-checked","tabIndex","selectedIndex","handleClick","scope","f","R","alldata","newItwm","handleOpenClick","CropFreeRounded_default","handleEditClick","DoubleArrowRounded_default","handleDoneClick","DoneOutlineRounded_default","style","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","value","FormControlLabel","control","Switch","flexGrow","background","default","Tabs","TabPanel","children","other","objectWithoutProperties","assign","hidden","Box","p","a11yProps","aria-controls","SimpleTabs","setValue","AppBar","newValue","centered","Tab","icon","Apps_default","CropFree_default","DoubleArrow_default","DoneOutline_default","wd","css","_templateObject","base","_templateObject2","myStyle","Lable","_templateObject3","LableMove","_templateObject4","FormControl","_templateObject5","SHOW","COLOR","_templateObject6","SMALL","_templateObject7","Input","_templateObject8","focus","_templateObject9","Suggest","_useState","_useState2","LabelCss","setLabelCss","inputRef","useRef","randomid","random","toString","substring","core_browser_esm","list","ref","current","func","onFocus","onBlur","htmlFor","defaultValue","options","idx","& > *","form","display","flexDirection","formDiv","justifyContent","alignItems","formControl","maxWidth","button","Red","ErrorLabel","styled","InputBar_Style_templateObject","BarHead","InputBar_Style_templateObject2","OutlinedInputxx","InputBar_Style_templateObject3","BasicTextFields","TaskName","setTaskName","_useState3","_useState4","SelectData","setSelectData","_useState5","_useState6","Type","setType","_useState7","_useState8","Pri","setPri","_useState9","_useState10","TaskNamelen","setTaskNamelen","_useState11","_useState12","isValidName","setIsValidName","_useState13","_useState14","errorText","setErrorText","handleChangeValue","e","fieldName","len","setLabelWidth","useEffect","offsetWidth","noValidate","autoComplete","InputLabel","error","endAdornment","InputAdornment","InputSuggest","pri","TextField","textField","InputLabelProps","shrink","Button","endIcon","Add_default","addOneData","preventDefault","DeleteSweep_default","cleanData","defaultRows","TaskMain","rows","setRows","Container","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.fbb04c8c.chunk.js","sourcesContent":["//ES6 - 使用module分檔 (import & export)\n//https://ithelp.ithome.com.tw/articles/10215265\nexport const createData = (name, priority, status, type, date) => {\n  // console.log(\"hello world!\");\n  return { name, priority, status, type, date };\n};\n\nexport var statusList = {\n  Open: 'Open',\n  InProgress: 'In Progress',\n  Done: 'Done',\n};\n\n//format:YYYY-MM-DD\nexport const getToday = () => {\n  var Today = new Date();\n  //2020-10-3\n  //http://zhi-yuan-chenge.blogspot.com/2015/10/jsjavascript_16.html\n  //https://stackoverflow.com/questions/3605214/javascript-add-leading-zeroes-to-date\n  //補0的三種方法\n  var dateString =\n    Today.getFullYear() +\n    '-' +\n    ('0' + (Today.getMonth() + 1)).slice(-2) +\n    '-' +\n    ('0' + Today.getDate()).slice(-2);\n\n  console.log(dateString); //2020-10-03\n  return dateString;\n};\n","import { lighten, makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport const useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport DoubleArrowRoundedIcon from \"@material-ui/icons/DoubleArrowRounded\";\nimport CropFreeRoundedIcon from \"@material-ui/icons/CropFreeRounded\";\nimport DoneOutlineRoundedIcon from \"@material-ui/icons/DoneOutlineRounded\";\nimport { statusList } from \"./helper\";\nimport * as R from \"ramda\";\nimport { useStyles, useToolbarStyles } from \"./Style/EnhancedTable_Style\";\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  {\n    id: \"name\",\n    numeric: false,\n    disablePadding: true,\n    label: \"任務名稱 Task Name\",\n  },\n  { id: \"Pri\", numeric: true, disablePadding: false, label: \"優先度 Pri.\" },\n  { id: \"Status\", numeric: true, disablePadding: false, label: \"狀態 Status\" },\n  { id: \"Type\", numeric: true, disablePadding: false, label: \"類型 Type\" },\n  { id: \"Date\", numeric: true, disablePadding: false, label: \"日期 Date\" },\n  {\n    id: \"Action\",\n    numeric: true,\n    disablePadding: false,\n    label: \"狀態操作 Action\",\n  },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\n          />\n        </TableCell>\n\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n  const handleDeleteClick = (event, newSelected) => {\n    console.log(\"ODDDD\");\n    console.log(newSelected);\n    console.log(props.selectedItem);\n    console.log(props.data);\n    // console.log( props.data);\n    props.selectedItem.forEach(function (item) {\n      const found = props.data.findIndex((element) => element.name === item);\n      console.log(found);\n      props.data.splice(found, 1); //從索引 的位置開始，刪除 1 個元素\n      console.log(\"remove \" + props.data); //列印陣列不可以用加的會看不出來\n    });\n    var removed = [...props.data]; //不可以用var removed ＝props.data; 不然仍是同物件 不會渲染\n    props.changefunc(removed);\n    //props.data.find 可以找出內容\n    // const found = props.data.find(element => element.name === props.selectedItem);\n    // console.log( found);\n\n    // var ans = array.every(function(item, index, array){\n    //   console.log(item, index, array); // 物件, 索引, 全部陣列\n    //   return item.age > 10 // 當全部 age 大於 10 才能回傳 true\n    // });\n    // console.log(ans);\n  };\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"span\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          className={classes.title}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"span\"\n        >\n          任務清單 Task List\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton\n            aria-label=\"delete\"\n            onClick={(event) => handleDeleteClick(event, numSelected)}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nexport default function EnhancedTable(props) {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"priority\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = props.data.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n  const handleDoneClick = (event, name) => {\n    console.log(\"Naxt\");\n    console.log(name);\n    var f = R.findIndex(R.propEq(\"name\", name), props.alldata);\n    console.log(f);\n\n    props.alldata[f].status = statusList.Done;\n\n    var newItwm = [...props.alldata]; //要這樣寫才會渲染\n    props.changefunc(newItwm);\n  };\n\n  const handleOpenClick = (event, name) => {\n    console.log(\"Naxt\");\n    console.log(name);\n    var f = R.findIndex(R.propEq(\"name\", name), props.alldata);\n    console.log(f);\n\n    props.alldata[f].status = statusList.Open;\n\n    var newItwm = [...props.alldata]; //要這樣寫才會渲染\n    props.changefunc(newItwm);\n  };\n\n  const handleEditClick = (event, name) => {\n    console.log(\"EDIT\");\n    console.log(name);\n    var f = R.findIndex(R.propEq(\"name\", name), props.alldata);\n    console.log(f);\n    props.alldata[f].status = \"In Progress\";\n    var newItwm = [...props.alldata]; //要這樣寫才會渲染\n    props.changefunc(newItwm);\n  };\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, props.data.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar\n          numSelected={selected.length}\n          selectedItem={selected}\n          data={props.data}\n          changefunc={props.changefunc}\n        />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? \"small\" : \"medium\"}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={props.data.length}\n            />\n            <TableBody>\n              {stableSort(props.data, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.name);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          onClick={(event) => handleClick(event, row.name)}\n                          checked={isItemSelected}\n                          inputProps={{ \"aria-labelledby\": labelId }}\n                        />\n                      </TableCell>\n\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                      >\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.priority}</TableCell>\n                      <TableCell align=\"right\">{row.status}</TableCell>\n                      <TableCell align=\"right\">{row.type}</TableCell>\n                      <TableCell align=\"right\">{row.date}</TableCell>\n                      <TableCell align=\"right\">\n                        <IconButton\n                          color={\n                            row.status != statusList.Open ? \"primary\" : \"error\"\n                          }\n                          aria-label=\"Open icon\"\n                          onClick={(event) => handleOpenClick(event, row.name)}\n                        >\n                          <CropFreeRoundedIcon />\n                        </IconButton>\n\n                        {/* 進度開關進度開關 */}\n\n                        <IconButton\n                          color={\n                            row.status != statusList.InProgress\n                              ? \"primary\"\n                              : \"error\"\n                          }\n                          aria-label=\"Edit icon\"\n                          onClick={(event) => handleEditClick(event, row.name)}\n                        >\n                          <DoubleArrowRoundedIcon />\n                        </IconButton>\n\n                        <IconButton\n                          color={row.status != statusList.Done ? \"primary\" : \"\"}\n                          aria-label=\"Next icon\"\n                          onClick={(event) => handleDoneClick(event, row.name)}\n                        >\n                          <DoneOutlineRoundedIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={props.data.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n}\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n  },\n  Tabs: {\n    backgroundColor: \"#f28482\",\n  },\n}));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport EnhancedTable from \"./EnhancedTable\";\nimport { statusList } from \"./helper\";\nimport * as R from \"ramda\";\nimport { useStyles } from \"./Style/SimpleTabs_Style\";\nimport AppsIcon from \"@material-ui/icons/Apps\";\nimport DoneOutlineIcon from \"@material-ui/icons/DoneOutline\";\nimport DoubleArrowIcon from \"@material-ui/icons/DoubleArrow\";\nimport CropFreeIcon from \"@material-ui/icons/CropFree\";\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography component=\"span\">{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nexport default function SimpleTabs(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Tabs\n          className={classes.Tabs}\n          value={value}\n          onChange={handleChange}\n          aria-label=\"simple tabs example\"\n          centered\n        >\n         \n          <Tab label=\"全部 ALL\" icon={<AppsIcon />} {...a11yProps(0)} />\n          <Tab label=\"未進行 OPEN\" icon={<CropFreeIcon />} {...a11yProps(1)} />\n          <Tab\n            label=\" 進行中 IN PROGRESS\"\n            icon={<DoubleArrowIcon />}\n            {...a11yProps(2)}\n          />\n\n          <Tab\n            label=\"已完成 DONE\"\n            icon={<DoneOutlineIcon />}\n            {...a11yProps(3)}\n          />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        {/* Item One */}\n\n        <EnhancedTable\n          data={props.data}\n          alldata={props.data}\n          changefunc={props.changefunc}\n        />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        Item Two\n        <EnhancedTable\n          data={R.filter(R.propEq(\"status\", statusList.Open), props.data)}\n          alldata={props.data}\n          changefunc={props.changefunc}\n        />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        Item Three\n        <EnhancedTable\n          data={R.filter(R.propEq(\"status\", statusList.InProgress), props.data)}\n          alldata={props.data}\n          changefunc={props.changefunc}\n        />\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n        Item Four\n        <EnhancedTable\n          data={R.filter(R.propEq(\"status\", statusList.Done), props.data)}\n          alldata={props.data}\n          changefunc={props.changefunc}\n        />\n      </TabPanel>\n    </div>\n  );\n}\n","/** @jsx jsx */ import { css, jsx } from '@emotion/core';\n\nexport default function AppStyle() {}\nexport const wd = (props) => css`\n  width: ${props.wd}px;\n`;\nconst base = css`\n  color: hotpink;\n`;\nexport const myStyle = {\n  Lable: css`\n    top: 15px;\n    left: 10px;\n    position: absolute;\n\n    color: rgba(0, 0, 0, 0.54);\n    padding: 0;\n    font-size: 1rem;\n    font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;\n    font-weight: 400;\n    line-height: 1;\n    letter-spacing: 0.00938em;\n    transform: translate(0px, 0px) scale(1);\n\n    transition-property: transform;\n    transition-duration: 0.2s;\n    transition-delay: 0s;\n  `,\n  LableMove: css`\n    ${wd};\n    ${base};\n    top: 10px;\n    left: 10px;\n    position: absolute;\n    background-color: #fff;\n    color: rgba(0, 0, 0, 0.54);\n    padding: 0;\n    font-size: 1rem;\n    font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;\n    font-weight: 400;\n    line-height: 1;\n    letter-spacing: 0.00938em;\n    transform: translate(-20px, -20px) scale(0.8);\n\n    transition-property: transform;\n    transition-duration: 0.2s;\n    transition-delay: 0s;\n  `,\n\n  FormControl: css`\n    border: 0;\n    margin: 0;\n    display: inline-flex;\n    padding: 0;\n    position: relative;\n    min-width: 0;\n    flex-direction: column;\n    vertical-align: top;\n  `,\n  SHOW: {\n    COLOR: css`\n      background-color: #3f51b5;\n      color: red;\n    `,\n    SMALL: css`\n      font-size: 8x;\n    `,\n  },\n\n  Input: {\n    base: css`\n      border: 1px solid #ced4da;\n      padding: 10px 6px 10px 6px;\n      position: relative;\n      font-size: 16px;\n      transition: border-color 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,\n        box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,\n        'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji',\n        'Segoe UI Emoji', 'Segoe UI Symbol';\n      border-radius: 4px;\n      background-color: #fff;\n    `,\n    focus: css`\n      &:focus {\n        //這邊＆後面不能有空白喔\n        border: 1px solid #3f51b5;\n      }\n      // &:visited {\n      //   z-index: 0;\n      //   background-color: #fff;\n      // }\n      // &:focus + label {\n      //   //這邊＆後面不能有空白喔\n      //   top: 0;\n      //   left: 0;\n      //   position: relative;\n      //   color: #3f51b5;\n      //   padding: 0;\n      //   font-size: 1rem;\n      //   font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;\n      //   font-weight: 400;\n      //   line-height: 1;\n      //   letter-spacing: 0.00938em;\n      //   transform: translate(0, -50px) scale(1, 1);\n      //   background-color: #fff;\n      //   width: 50px;\n      // }\n    `,\n  },\n};\n","/** @jsx jsx */ import { jsx } from '@emotion/core';\n\nimport React, { useRef, useState } from 'react';\n\nimport { myStyle, wd } from './Style/InputSuggest_Style';\n\nconst Suggest = (props) => {\n  // const handleClick = () => {\n  //   inputRef.current.focus(); //滑鼠會跳到input的欄位\n  // };\n  const [LabelCss, setLabelCss] = useState(myStyle.Lable);\n  const handleChangeValue = (event) => {\n    console.log(inputRef.current.value);\n\n    props.func(inputRef.current.value);\n  };\n  const handleFoucus = () => {\n    setLabelCss(myStyle.LableMove);\n    wd(props);\n  };\n\n  const handleBlur = () => {\n    const len = inputRef.current.value.length;\n    if (len === 0) {\n      console.log('0');\n      setLabelCss(myStyle.Lable);\n    }\n  };\n\n  const inputRef = useRef(null);\n  const randomid = Math.random().toString(16).substring(2);\n  return (\n    <div css={myStyle.FormControl}>\n      <input\n        list={randomid} // defaultValue={props.defaultValue}\n        ref={inputRef}\n        id={props.id}\n        wd=\"300\"\n        css={[myStyle.Input.base]}\n        onChange={handleChangeValue}\n        onFocus={handleFoucus}\n        onBlur={handleBlur}\n      />\n      <label htmlFor=\"xx\" css={LabelCss}>\n        {props.defaultValue}\n      </label>\n      <datalist id={randomid}>\n        {props.options.map((item, idx) => (\n          <option value={item} key={idx} />\n        ))}\n      </datalist>\n    </div>\n  );\n};\n\nexport default Suggest;\n","import styled from '@emotion/styled';\nimport { makeStyles } from '@material-ui/core/styles';\n/** @jsx jsx */ import { css, jsx } from '@emotion/core';\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  formDiv: {\n    display: 'flex',\n    justifyContent: 'center', //---左右置中\n    alignItems: 'center', //---排列上下置中\n  },\n  formControl: {\n    margin: '10px',\n    //marginTop: theme.spacing.unit * 2,\n    minWidth: 200,\n    maxWidth: 300,\n  },\n  button: {\n    margin: '10px',\n    width: '130px',\n  },\n  Red: {\n    color: 'red', //color: red 沒有加雙引號是錯誤寫法\n  },\n  //   ErrorDiv: css`\n  //     //不知道為什麼這種寫法引用沒效果 解析不出來\n  //     height: 11px;\n  //     font-size: 12px;\n  //     color: #ea645e;\n  //     font-weight: Regular;\n  //     line-height: 14px;\n  //     letter-spacing: 0.73px;\n  //     margin-top: 8px;\n  //   `,\n}));\n\nexport const ErrorLabel = styled.label`\n  //換一種寫法\n  height: 11px;\n  font-size: 12px;\n  color: #ea645e;\n  font-weight: Regular;\n  line-height: 14px;\n  letter-spacing: 0.73px;\n  margin-top: 8px;\n`;\n\nexport const myStyle = {\n  BarHead: css`\n    width: 100%;\n    height: 80px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    // background-color: #515258;\n  `,\n  OutlinedInputxx: css`\n    background-color: #fff;\n  `,\n};\n","import React, { useState, useRef } from \"react\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { createData } from \"./helper\";\nimport Input from \"@material-ui/core/Input\";\nimport { InputAdornment, InputLabel } from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl\";\n/** @jsx jsx */ import { css, jsx } from \"@emotion/core\";\n\nimport InputSuggest from \"./InputSuggest\";\nimport { getToday } from \"./helper\";\nimport { useStyles, ErrorLabel, myStyle } from \"./Style/InputBar_Style\";\nimport { statusList } from \"./helper\";\nimport DeleteSweepIcon from \"@material-ui/icons/DeleteSweep\";\nexport default function BasicTextFields(props) {\n  const classes = useStyles();\n  const [TaskName, setTaskName] = useState(\"\");\n  const [SelectData, setSelectData] = useState(getToday());\n\n  const [Type, setType] = useState(\"\");\n  const [Pri, setPri] = useState(0);\n  const [TaskNamelen, setTaskNamelen] = useState(0);\n  const [isValidName, setIsValidName] = useState(true);\n  const [errorText, setErrorText] = useState(\"\");\n\n  const handleChangeValue = (e, fieldName) => {\n    const { value } = e.target;\n    console.log(value);\n    if (fieldName === \"TaskName\") {\n      setTaskName(value);\n      const len = [...value].length;\n      if (TaskNamelen > 10) {\n        setIsValidName(false);\n        setErrorText(\"text length too long.\");\n      } else {\n        setIsValidName(true);\n        setErrorText(\"\");\n      }\n      setTaskNamelen(len);\n    }\n    if (fieldName === \"SelectData\") {\n      setSelectData(value);\n      console.log(value);\n    }\n  };\n\n  // 清空資料\n  const handleClean = (event) => {\n    console.log(\"clean data\");\n    props.cleanData();\n  };\n  const handleSubmit = (event) => {\n    // TODO 判斷是否重複\n    if (TaskName === \"\") {\n    }\n    console.log(\"type\" + Type);\n    console.log(\"Pri\" + Pri);\n    //https://stackoverflow.com/questions/57918784/javascript-react-push-to-an-array-in-usestate\n    // props.data.push( createData(task, 305, 3.7, 67, 4.3))\n    // props.changefunc(props.data)\n    // 用push進去 不知道為什麼無法觸發data update的 useEffect 所以也不會render conponent\n    //改成下列的串接寫法就可以\n    // props.changefunc([\n    //   ...props.data,\n    //   createData(TaskName, Pri, 3.7, Type, 4.3),\n    // ]);\n\n    props.addOneData(\n      createData(TaskName, Pri, statusList.Open, Type, SelectData)\n    );\n    //TODO\n    event.preventDefault();\n  };\n  const handlePriChange = (pri) => {\n    setPri(pri);\n  };\n  const handleTypeChange = (type) => {\n    setType(type);\n  };\n\n  const inputRef = useRef(null);\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  React.useEffect(() => {\n    setLabelWidth(inputRef.current.offsetWidth);\n  }, []);\n  return (\n    <div css={myStyle.BarHead}>\n      <form className={classes.form} noValidate autoComplete=\"off\">\n        <div className={classes.formDiv}>\n          <FormControl className={classes.formControl} variant=\"outlined\">\n            <InputLabel ref={inputRef} htmlFor=\"TaskName\">\n              任務 TaskName\n            </InputLabel>\n            <Input\n              id=\"standard-basic\"\n              error={!isValidName}\n              label=\"TaskName\"\n              // helperText={isOK ? \"\" : \"text length too long.\"} not\n              // value={task}\n              onChange={(e) => handleChangeValue(e, \"TaskName\")}\n              endAdornment={\n                <InputAdornment position=\"end\">{`${TaskNamelen}/10`}</InputAdornment>\n              }\n            />\n            {/*不知道為什麼這種寫法引用沒效果 解析不出來\n             <label className={classes.ErrorDiv}>{errorText}</label> */}\n\n            <ErrorLabel>{errorText}</ErrorLabel>\n          </FormControl>\n          <FormControl className={classes.formControl} variant=\"outlined\">\n            <InputSuggest\n              wd=\"300\"\n              defaultValue=\"優先度 pri.\"\n              options={[\"1\", \"2\", \"3\"]}\n              func={handlePriChange}\n            />\n            <ErrorLabel></ErrorLabel>\n          </FormControl>\n          <FormControl className={classes.formControl} variant=\"outlined\">\n            <InputSuggest\n              defaultValue=\"類型 Type\"\n              options={[\"life\", \"blog\", \"front-web\", \"go\", \"design\", \"others\"]}\n              func={handleTypeChange}\n            />\n            <ErrorLabel></ErrorLabel>\n          </FormControl>\n          <FormControl className={classes.formControl} variant=\"outlined\">\n            <TextField\n              id=\"date\"\n              label=\"開始日 Date\"\n              type=\"date\"\n              defaultValue={getToday()}\n              label=\"SelectData\"\n              className={classes.textField}\n              onChange={(e) => handleChangeValue(e, \"SelectData\")}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <ErrorLabel></ErrorLabel>\n          </FormControl>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n            endIcon={<AddIcon>send</AddIcon>}\n            // type=\"submit\"\n            onClick={handleSubmit}\n          >\n            新增\n          </Button>\n\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.button}\n            endIcon={<DeleteSweepIcon />}\n            // type=\"submit\"\n            onClick={handleClean}\n          >\n            清空資料\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport SimpleTabs from \"./SimpleTabs\";\nimport InputBar from \"./InputBar\";\nimport { createData, statusList } from \"./helper\";\nimport * as R from \"ramda\";\nimport Container from \"@material-ui/core/Container\";\n\nconst defaultRows = [\n  createData(\"寫一篇部落格 for go\", 1, statusList.Open, \"blog\", \"2021-01-31\"),\n  createData(\"寫一篇Go \", 2, statusList.InProgress, \"go\", \"2021-01-31\"),\n  createData(\"寫一篇初始化go\", 1, statusList.Open, \"go\", \"2021-01-31\"),\n  createData(\"練習前端table改寫\", 2, statusList.Open, \"life\", \"2021-01-31\"),\n  createData(\"練習前端tab改寫\", 1, statusList.Open, \"\", \"2021-01-31\"),\n  createData(\"練習前端格式改寫\", 2, statusList.Open, \"\", \"2021-01-31\"),\n  createData(\"前端格式整理\", 3, statusList.Open, \"\", \"2021-01-31\"),\n  createData(\"寫一篇部落格 for 前端\", 3, statusList.Done, \"\", \"2021-01-31\"),\n  createData(\"寫一篇部落格 for 工具\", 2, statusList.Open, \"\", \"2021-01-31\"),\n];\n\nexport default function TaskMain() {\n  //以下這兩個要寫在TaskMain裡＠＠？\n  const [rows, setRows] = useState([]);\n  useEffect(() => {\n    /* componentDidMount 區*/\n    setRows(defaultRows);\n    // return () => {\n    //   /* componentWillUnmount區 */\n    //   setRows([])\n    // };\n  }, []); //if have content, componentDidUpdate\n\n  // 父層新增可以改變資料的地方\n  const changeData = (data) => {\n    setRows(data);\n    console.log(\"changeData\" + data);\n  };\n  const addOneData = (data) => {\n    setRows([...rows, data]);\n    console.log(\"addOneData\" + data);\n  };\n\n  // 清空資料\n  const cleanData = () => {\n    console.log(\"clean data\");\n    setRows([]);\n  };\n  const Data = () => {\n    console.log(\" data\");\n    console.log(rows);\n    var s = R.filter(R.propEq(\"name\", \"Cupcake\"), rows);\n    console.log(s);\n  };\n\n  return (\n    <Container maxWidth=\"lg\">\n      <InputBar addOneData={addOneData} cleanData={cleanData} />\n      <p></p>\n      <SimpleTabs data={rows} changefunc={changeData} />\n      {/* <button onClick={Data}>資料</button>debug */}\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TaskMain from './component/TaskMain';\nconst rootElement = document.getElementById('root');\nReactDOM.render(<TaskMain />, rootElement);\n"],"sourceRoot":""}